// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: task.sql

package sqlc

import (
	"context"
	"time"
)

const createTask = `-- name: CreateTask :exec

INSERT INTO tasks (id, title, description,kind, created_at, updated_at)
VALUES (?,
        ?,
        ?,
        ?,
        ?,
        ?)
`

type CreateTaskParams struct {
	ID          string
	Title       string
	Description string
	Kind        TasksKind
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) error {
	_, err := q.db.ExecContext(ctx, createTask,
		arg.ID,
		arg.Title,
		arg.Description,
		arg.Kind,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const deleteTask = `-- name: DeleteTask :exec

DELETE
FROM tasks
WHERE id = ?
`

func (q *Queries) DeleteTask(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, deleteTask, id)
	return err
}

const updateTask = `-- name: UpdateTask :exec

UPDATE tasks
SET title = ?,
    description = ?,
    kind = ?,
    updated_at = ?
WHERE id = ?
`

type UpdateTaskParams struct {
	Title       string
	Description string
	Kind        TasksKind
	UpdatedAt   time.Time
	ID          string
}

func (q *Queries) UpdateTask(ctx context.Context, arg UpdateTaskParams) error {
	_, err := q.db.ExecContext(ctx, updateTask,
		arg.Title,
		arg.Description,
		arg.Kind,
		arg.UpdatedAt,
		arg.ID,
	)
	return err
}
