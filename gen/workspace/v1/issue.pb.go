// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: workspace/v1/issue.proto

package workspacev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IssueOpenState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueOpenState) Reset() {
	*x = IssueOpenState{}
	mi := &file_workspace_v1_issue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueOpenState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueOpenState) ProtoMessage() {}

func (x *IssueOpenState) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueOpenState.ProtoReflect.Descriptor instead.
func (*IssueOpenState) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{0}
}

type IssueInvestigatingState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cause         *string                `protobuf:"bytes,1,opt,name=cause,proto3,oneof" json:"cause,omitempty"` // Optional solution for the issue
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueInvestigatingState) Reset() {
	*x = IssueInvestigatingState{}
	mi := &file_workspace_v1_issue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueInvestigatingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInvestigatingState) ProtoMessage() {}

func (x *IssueInvestigatingState) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInvestigatingState.ProtoReflect.Descriptor instead.
func (*IssueInvestigatingState) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{1}
}

func (x *IssueInvestigatingState) GetCause() string {
	if x != nil && x.Cause != nil {
		return *x.Cause
	}
	return ""
}

type IssueResolvingState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cause         string                 `protobuf:"bytes,1,opt,name=cause,proto3" json:"cause,omitempty"`             // Message indicating resolution
	Solution      *string                `protobuf:"bytes,2,opt,name=solution,proto3,oneof" json:"solution,omitempty"` // Message indicating resolution
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueResolvingState) Reset() {
	*x = IssueResolvingState{}
	mi := &file_workspace_v1_issue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueResolvingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueResolvingState) ProtoMessage() {}

func (x *IssueResolvingState) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueResolvingState.ProtoReflect.Descriptor instead.
func (*IssueResolvingState) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{2}
}

func (x *IssueResolvingState) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *IssueResolvingState) GetSolution() string {
	if x != nil && x.Solution != nil {
		return *x.Solution
	}
	return ""
}

type IssueClosedState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cause         string                 `protobuf:"bytes,1,opt,name=cause,proto3" json:"cause,omitempty"`       // Message indicating closure
	Solution      string                 `protobuf:"bytes,2,opt,name=solution,proto3" json:"solution,omitempty"` // Message indicating closure
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueClosedState) Reset() {
	*x = IssueClosedState{}
	mi := &file_workspace_v1_issue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueClosedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueClosedState) ProtoMessage() {}

func (x *IssueClosedState) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueClosedState.ProtoReflect.Descriptor instead.
func (*IssueClosedState) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{3}
}

func (x *IssueClosedState) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *IssueClosedState) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

type Issue struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to State:
	//
	//	*Issue_Open
	//	*Issue_Investigating
	//	*Issue_Resolution
	//	*Issue_Closed
	State         isIssue_State          `protobuf_oneof:"state"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Issue) Reset() {
	*x = Issue{}
	mi := &file_workspace_v1_issue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{4}
}

func (x *Issue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Issue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Issue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Issue) GetState() isIssue_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Issue) GetOpen() *IssueOpenState {
	if x != nil {
		if x, ok := x.State.(*Issue_Open); ok {
			return x.Open
		}
	}
	return nil
}

func (x *Issue) GetInvestigating() *IssueInvestigatingState {
	if x != nil {
		if x, ok := x.State.(*Issue_Investigating); ok {
			return x.Investigating
		}
	}
	return nil
}

func (x *Issue) GetResolution() *IssueResolvingState {
	if x != nil {
		if x, ok := x.State.(*Issue_Resolution); ok {
			return x.Resolution
		}
	}
	return nil
}

func (x *Issue) GetClosed() *IssueClosedState {
	if x != nil {
		if x, ok := x.State.(*Issue_Closed); ok {
			return x.Closed
		}
	}
	return nil
}

func (x *Issue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Issue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isIssue_State interface {
	isIssue_State()
}

type Issue_Open struct {
	Open *IssueOpenState `protobuf:"bytes,4,opt,name=open,proto3,oneof"`
}

type Issue_Investigating struct {
	Investigating *IssueInvestigatingState `protobuf:"bytes,5,opt,name=investigating,proto3,oneof"`
}

type Issue_Resolution struct {
	Resolution *IssueResolvingState `protobuf:"bytes,6,opt,name=resolution,proto3,oneof"`
}

type Issue_Closed struct {
	Closed *IssueClosedState `protobuf:"bytes,7,opt,name=closed,proto3,oneof"`
}

func (*Issue_Open) isIssue_State() {}

func (*Issue_Investigating) isIssue_State() {}

func (*Issue_Resolution) isIssue_State() {}

func (*Issue_Closed) isIssue_State() {}

type CreateIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIssueRequest) Reset() {
	*x = CreateIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssueRequest) ProtoMessage() {}

func (x *CreateIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssueRequest.ProtoReflect.Descriptor instead.
func (*CreateIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{5}
}

func (x *CreateIssueRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateIssueRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIssueResponse) Reset() {
	*x = CreateIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssueResponse) ProtoMessage() {}

func (x *CreateIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssueResponse.ProtoReflect.Descriptor instead.
func (*CreateIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{6}
}

func (x *CreateIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type GetIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIssueRequest) Reset() {
	*x = GetIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssueRequest) ProtoMessage() {}

func (x *GetIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssueRequest.ProtoReflect.Descriptor instead.
func (*GetIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{7}
}

func (x *GetIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIssueResponse) Reset() {
	*x = GetIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssueResponse) ProtoMessage() {}

func (x *GetIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssueResponse.ProtoReflect.Descriptor instead.
func (*GetIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{8}
}

func (x *GetIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type ListIssuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIssuesRequest) Reset() {
	*x = ListIssuesRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesRequest) ProtoMessage() {}

func (x *ListIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesRequest.ProtoReflect.Descriptor instead.
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{9}
}

type ListIssuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issues        []*Issue               `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIssuesResponse) Reset() {
	*x = ListIssuesResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesResponse) ProtoMessage() {}

func (x *ListIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesResponse.ProtoReflect.Descriptor instead.
func (*ListIssuesResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{10}
}

func (x *ListIssuesResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type InvestigateIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvestigateIssueRequest) Reset() {
	*x = InvestigateIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvestigateIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestigateIssueRequest) ProtoMessage() {}

func (x *InvestigateIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestigateIssueRequest.ProtoReflect.Descriptor instead.
func (*InvestigateIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{11}
}

func (x *InvestigateIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InvestigateIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvestigateIssueResponse) Reset() {
	*x = InvestigateIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvestigateIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestigateIssueResponse) ProtoMessage() {}

func (x *InvestigateIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestigateIssueResponse.ProtoReflect.Descriptor instead.
func (*InvestigateIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{12}
}

func (x *InvestigateIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type ResolveIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveIssueRequest) Reset() {
	*x = ResolveIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIssueRequest) ProtoMessage() {}

func (x *ResolveIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveIssueRequest.ProtoReflect.Descriptor instead.
func (*ResolveIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{13}
}

func (x *ResolveIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResolveIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveIssueResponse) Reset() {
	*x = ResolveIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIssueResponse) ProtoMessage() {}

func (x *ResolveIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveIssueResponse.ProtoReflect.Descriptor instead.
func (*ResolveIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{14}
}

func (x *ResolveIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type CloseIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseIssueRequest) Reset() {
	*x = CloseIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseIssueRequest) ProtoMessage() {}

func (x *CloseIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseIssueRequest.ProtoReflect.Descriptor instead.
func (*CloseIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{15}
}

func (x *CloseIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CloseIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseIssueResponse) Reset() {
	*x = CloseIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseIssueResponse) ProtoMessage() {}

func (x *CloseIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseIssueResponse.ProtoReflect.Descriptor instead.
func (*CloseIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{16}
}

func (x *CloseIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type SetIssueCauseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cause         string                 `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetIssueCauseRequest) Reset() {
	*x = SetIssueCauseRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIssueCauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIssueCauseRequest) ProtoMessage() {}

func (x *SetIssueCauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIssueCauseRequest.ProtoReflect.Descriptor instead.
func (*SetIssueCauseRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{17}
}

func (x *SetIssueCauseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetIssueCauseRequest) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

type SetIssueCauseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetIssueCauseResponse) Reset() {
	*x = SetIssueCauseResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIssueCauseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIssueCauseResponse) ProtoMessage() {}

func (x *SetIssueCauseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIssueCauseResponse.ProtoReflect.Descriptor instead.
func (*SetIssueCauseResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{18}
}

func (x *SetIssueCauseResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type SetIssueSolutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Solution      string                 `protobuf:"bytes,2,opt,name=solution,proto3" json:"solution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetIssueSolutionRequest) Reset() {
	*x = SetIssueSolutionRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIssueSolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIssueSolutionRequest) ProtoMessage() {}

func (x *SetIssueSolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIssueSolutionRequest.ProtoReflect.Descriptor instead.
func (*SetIssueSolutionRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{19}
}

func (x *SetIssueSolutionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetIssueSolutionRequest) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

type SetIssueSolutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetIssueSolutionResponse) Reset() {
	*x = SetIssueSolutionResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIssueSolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIssueSolutionResponse) ProtoMessage() {}

func (x *SetIssueSolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIssueSolutionResponse.ProtoReflect.Descriptor instead.
func (*SetIssueSolutionResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{20}
}

func (x *SetIssueSolutionResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type DeleteIssueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIssueRequest) Reset() {
	*x = DeleteIssueRequest{}
	mi := &file_workspace_v1_issue_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIssueRequest) ProtoMessage() {}

func (x *DeleteIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIssueRequest.ProtoReflect.Descriptor instead.
func (*DeleteIssueRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteIssueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issue         *Issue                 `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIssueResponse) Reset() {
	*x = DeleteIssueResponse{}
	mi := &file_workspace_v1_issue_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIssueResponse) ProtoMessage() {}

func (x *DeleteIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_issue_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIssueResponse.ProtoReflect.Descriptor instead.
func (*DeleteIssueResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_issue_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteIssueResponse) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

var File_workspace_v1_issue_proto protoreflect.FileDescriptor

const file_workspace_v1_issue_proto_rawDesc = "" +
	"\n" +
	"\x18workspace/v1/issue.proto\x12\fworkspace.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x10\n" +
	"\x0eIssueOpenState\">\n" +
	"\x17IssueInvestigatingState\x12\x19\n" +
	"\x05cause\x18\x01 \x01(\tH\x00R\x05cause\x88\x01\x01B\b\n" +
	"\x06_cause\"Y\n" +
	"\x13IssueResolvingState\x12\x14\n" +
	"\x05cause\x18\x01 \x01(\tR\x05cause\x12\x1f\n" +
	"\bsolution\x18\x02 \x01(\tH\x00R\bsolution\x88\x01\x01B\v\n" +
	"\t_solution\"D\n" +
	"\x10IssueClosedState\x12\x14\n" +
	"\x05cause\x18\x01 \x01(\tR\x05cause\x12\x1a\n" +
	"\bsolution\x18\x02 \x01(\tR\bsolution\"\xd0\x03\n" +
	"\x05Issue\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x122\n" +
	"\x04open\x18\x04 \x01(\v2\x1c.workspace.v1.IssueOpenStateH\x00R\x04open\x12M\n" +
	"\rinvestigating\x18\x05 \x01(\v2%.workspace.v1.IssueInvestigatingStateH\x00R\rinvestigating\x12C\n" +
	"\n" +
	"resolution\x18\x06 \x01(\v2!.workspace.v1.IssueResolvingStateH\x00R\n" +
	"resolution\x128\n" +
	"\x06closed\x18\a \x01(\v2\x1e.workspace.v1.IssueClosedStateH\x00R\x06closed\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\a\n" +
	"\x05state\"L\n" +
	"\x12CreateIssueRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"@\n" +
	"\x13CreateIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"!\n" +
	"\x0fGetIssueRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"=\n" +
	"\x10GetIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"\x13\n" +
	"\x11ListIssuesRequest\"A\n" +
	"\x12ListIssuesResponse\x12+\n" +
	"\x06issues\x18\x01 \x03(\v2\x13.workspace.v1.IssueR\x06issues\")\n" +
	"\x17InvestigateIssueRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"E\n" +
	"\x18InvestigateIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"%\n" +
	"\x13ResolveIssueRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"A\n" +
	"\x14ResolveIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"#\n" +
	"\x11CloseIssueRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"?\n" +
	"\x12CloseIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"<\n" +
	"\x14SetIssueCauseRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05cause\x18\x02 \x01(\tR\x05cause\"B\n" +
	"\x15SetIssueCauseResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"E\n" +
	"\x17SetIssueSolutionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bsolution\x18\x02 \x01(\tR\bsolution\"E\n" +
	"\x18SetIssueSolutionResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issue\"$\n" +
	"\x12DeleteIssueRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"@\n" +
	"\x13DeleteIssueResponse\x12)\n" +
	"\x05issue\x18\x01 \x01(\v2\x13.workspace.v1.IssueR\x05issueB@Z>github.com/leona-art/task-manager/gen/workspace/v1;workspacev1b\x06proto3"

var (
	file_workspace_v1_issue_proto_rawDescOnce sync.Once
	file_workspace_v1_issue_proto_rawDescData []byte
)

func file_workspace_v1_issue_proto_rawDescGZIP() []byte {
	file_workspace_v1_issue_proto_rawDescOnce.Do(func() {
		file_workspace_v1_issue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workspace_v1_issue_proto_rawDesc), len(file_workspace_v1_issue_proto_rawDesc)))
	})
	return file_workspace_v1_issue_proto_rawDescData
}

var file_workspace_v1_issue_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_workspace_v1_issue_proto_goTypes = []any{
	(*IssueOpenState)(nil),           // 0: workspace.v1.IssueOpenState
	(*IssueInvestigatingState)(nil),  // 1: workspace.v1.IssueInvestigatingState
	(*IssueResolvingState)(nil),      // 2: workspace.v1.IssueResolvingState
	(*IssueClosedState)(nil),         // 3: workspace.v1.IssueClosedState
	(*Issue)(nil),                    // 4: workspace.v1.Issue
	(*CreateIssueRequest)(nil),       // 5: workspace.v1.CreateIssueRequest
	(*CreateIssueResponse)(nil),      // 6: workspace.v1.CreateIssueResponse
	(*GetIssueRequest)(nil),          // 7: workspace.v1.GetIssueRequest
	(*GetIssueResponse)(nil),         // 8: workspace.v1.GetIssueResponse
	(*ListIssuesRequest)(nil),        // 9: workspace.v1.ListIssuesRequest
	(*ListIssuesResponse)(nil),       // 10: workspace.v1.ListIssuesResponse
	(*InvestigateIssueRequest)(nil),  // 11: workspace.v1.InvestigateIssueRequest
	(*InvestigateIssueResponse)(nil), // 12: workspace.v1.InvestigateIssueResponse
	(*ResolveIssueRequest)(nil),      // 13: workspace.v1.ResolveIssueRequest
	(*ResolveIssueResponse)(nil),     // 14: workspace.v1.ResolveIssueResponse
	(*CloseIssueRequest)(nil),        // 15: workspace.v1.CloseIssueRequest
	(*CloseIssueResponse)(nil),       // 16: workspace.v1.CloseIssueResponse
	(*SetIssueCauseRequest)(nil),     // 17: workspace.v1.SetIssueCauseRequest
	(*SetIssueCauseResponse)(nil),    // 18: workspace.v1.SetIssueCauseResponse
	(*SetIssueSolutionRequest)(nil),  // 19: workspace.v1.SetIssueSolutionRequest
	(*SetIssueSolutionResponse)(nil), // 20: workspace.v1.SetIssueSolutionResponse
	(*DeleteIssueRequest)(nil),       // 21: workspace.v1.DeleteIssueRequest
	(*DeleteIssueResponse)(nil),      // 22: workspace.v1.DeleteIssueResponse
	(*timestamppb.Timestamp)(nil),    // 23: google.protobuf.Timestamp
}
var file_workspace_v1_issue_proto_depIdxs = []int32{
	0,  // 0: workspace.v1.Issue.open:type_name -> workspace.v1.IssueOpenState
	1,  // 1: workspace.v1.Issue.investigating:type_name -> workspace.v1.IssueInvestigatingState
	2,  // 2: workspace.v1.Issue.resolution:type_name -> workspace.v1.IssueResolvingState
	3,  // 3: workspace.v1.Issue.closed:type_name -> workspace.v1.IssueClosedState
	23, // 4: workspace.v1.Issue.created_at:type_name -> google.protobuf.Timestamp
	23, // 5: workspace.v1.Issue.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 6: workspace.v1.CreateIssueResponse.issue:type_name -> workspace.v1.Issue
	4,  // 7: workspace.v1.GetIssueResponse.issue:type_name -> workspace.v1.Issue
	4,  // 8: workspace.v1.ListIssuesResponse.issues:type_name -> workspace.v1.Issue
	4,  // 9: workspace.v1.InvestigateIssueResponse.issue:type_name -> workspace.v1.Issue
	4,  // 10: workspace.v1.ResolveIssueResponse.issue:type_name -> workspace.v1.Issue
	4,  // 11: workspace.v1.CloseIssueResponse.issue:type_name -> workspace.v1.Issue
	4,  // 12: workspace.v1.SetIssueCauseResponse.issue:type_name -> workspace.v1.Issue
	4,  // 13: workspace.v1.SetIssueSolutionResponse.issue:type_name -> workspace.v1.Issue
	4,  // 14: workspace.v1.DeleteIssueResponse.issue:type_name -> workspace.v1.Issue
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_workspace_v1_issue_proto_init() }
func file_workspace_v1_issue_proto_init() {
	if File_workspace_v1_issue_proto != nil {
		return
	}
	file_workspace_v1_issue_proto_msgTypes[1].OneofWrappers = []any{}
	file_workspace_v1_issue_proto_msgTypes[2].OneofWrappers = []any{}
	file_workspace_v1_issue_proto_msgTypes[4].OneofWrappers = []any{
		(*Issue_Open)(nil),
		(*Issue_Investigating)(nil),
		(*Issue_Resolution)(nil),
		(*Issue_Closed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workspace_v1_issue_proto_rawDesc), len(file_workspace_v1_issue_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workspace_v1_issue_proto_goTypes,
		DependencyIndexes: file_workspace_v1_issue_proto_depIdxs,
		MessageInfos:      file_workspace_v1_issue_proto_msgTypes,
	}.Build()
	File_workspace_v1_issue_proto = out.File
	file_workspace_v1_issue_proto_goTypes = nil
	file_workspace_v1_issue_proto_depIdxs = nil
}
