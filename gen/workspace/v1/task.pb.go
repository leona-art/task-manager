// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: workspace/v1/task.proto

package workspacev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TASK_TYPE_UNSPECIFIED TaskType = 0 // Default value, should not be used
	TaskType_TASK_TYPE_TODO        TaskType = 1 // Represents a Todo task
	TaskType_TASK_TYPE_PROGRESS    TaskType = 2 // Represents a Progress task
	TaskType_TASK_TYPE_ISSUE       TaskType = 3 // Represents an Issue task
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_UNSPECIFIED",
		1: "TASK_TYPE_TODO",
		2: "TASK_TYPE_PROGRESS",
		3: "TASK_TYPE_ISSUE",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_UNSPECIFIED": 0,
		"TASK_TYPE_TODO":        1,
		"TASK_TYPE_PROGRESS":    2,
		"TASK_TYPE_ISSUE":       3,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_workspace_v1_task_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_workspace_v1_task_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{0}
}

type Task struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Task_Todo
	//	*Task_Progress
	//	*Task_Issue
	Type          isTask_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_workspace_v1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetType() isTask_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Task) GetTodo() *Todo {
	if x != nil {
		if x, ok := x.Type.(*Task_Todo); ok {
			return x.Todo
		}
	}
	return nil
}

func (x *Task) GetProgress() *Progress {
	if x != nil {
		if x, ok := x.Type.(*Task_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *Task) GetIssue() *Issue {
	if x != nil {
		if x, ok := x.Type.(*Task_Issue); ok {
			return x.Issue
		}
	}
	return nil
}

type isTask_Type interface {
	isTask_Type()
}

type Task_Todo struct {
	Todo *Todo `protobuf:"bytes,1,opt,name=todo,proto3,oneof"`
}

type Task_Progress struct {
	Progress *Progress `protobuf:"bytes,2,opt,name=progress,proto3,oneof"`
}

type Task_Issue struct {
	Issue *Issue `protobuf:"bytes,3,opt,name=issue,proto3,oneof"`
}

func (*Task_Todo) isTask_Type() {}

func (*Task_Progress) isTask_Type() {}

func (*Task_Issue) isTask_Type() {}

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          TaskType               `protobuf:"varint,3,opt,name=type,proto3,enum=workspace.v1.TaskType" json:"type,omitempty"` // Type of the task to create
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_workspace_v1_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetType() TaskType {
	if x != nil {
		return x.Type
	}
	return TaskType_TASK_TYPE_UNSPECIFIED
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"` // The created task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_workspace_v1_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the task to retrieve
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_workspace_v1_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"` // The retrieved task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_workspace_v1_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          TaskType               `protobuf:"varint,1,opt,name=type,proto3,enum=workspace.v1.TaskType" json:"type,omitempty"` // Optional filter by task type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_workspace_v1_task_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksRequest) GetType() TaskType {
	if x != nil {
		return x.Type
	}
	return TaskType_TASK_TYPE_UNSPECIFIED
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // List of tasks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_workspace_v1_task_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{6}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the task to delete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_workspace_v1_task_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the deleted task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskResponse) Reset() {
	*x = DeleteTaskResponse{}
	mi := &file_workspace_v1_task_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskResponse) ProtoMessage() {}

func (x *DeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_task_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_task_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_workspace_v1_task_proto protoreflect.FileDescriptor

const file_workspace_v1_task_proto_rawDesc = "" +
	"\n" +
	"\x17workspace/v1/task.proto\x12\fworkspace.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17workspace/v1/todo.proto\x1a\x1bworkspace/v1/progress.proto\x1a\x18workspace/v1/issue.proto\"\x9b\x01\n" +
	"\x04Task\x12(\n" +
	"\x04todo\x18\x01 \x01(\v2\x12.workspace.v1.TodoH\x00R\x04todo\x124\n" +
	"\bprogress\x18\x02 \x01(\v2\x16.workspace.v1.ProgressH\x00R\bprogress\x12+\n" +
	"\x05issue\x18\x03 \x01(\v2\x13.workspace.v1.IssueH\x00R\x05issueB\x06\n" +
	"\x04type\"w\n" +
	"\x11CreateTaskRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12*\n" +
	"\x04type\x18\x03 \x01(\x0e2\x16.workspace.v1.TaskTypeR\x04type\"<\n" +
	"\x12CreateTaskResponse\x12&\n" +
	"\x04task\x18\x01 \x01(\v2\x12.workspace.v1.TaskR\x04task\" \n" +
	"\x0eGetTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x0fGetTaskResponse\x12&\n" +
	"\x04task\x18\x01 \x01(\v2\x12.workspace.v1.TaskR\x04task\">\n" +
	"\x10ListTasksRequest\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.workspace.v1.TaskTypeR\x04type\"=\n" +
	"\x11ListTasksResponse\x12(\n" +
	"\x05tasks\x18\x01 \x03(\v2\x12.workspace.v1.TaskR\x05tasks\"#\n" +
	"\x11DeleteTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"$\n" +
	"\x12DeleteTaskResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id*f\n" +
	"\bTaskType\x12\x19\n" +
	"\x15TASK_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eTASK_TYPE_TODO\x10\x01\x12\x16\n" +
	"\x12TASK_TYPE_PROGRESS\x10\x02\x12\x13\n" +
	"\x0fTASK_TYPE_ISSUE\x10\x03B@Z>github.com/leona-art/task-manager/gen/workspace/v1;workspacev1b\x06proto3"

var (
	file_workspace_v1_task_proto_rawDescOnce sync.Once
	file_workspace_v1_task_proto_rawDescData []byte
)

func file_workspace_v1_task_proto_rawDescGZIP() []byte {
	file_workspace_v1_task_proto_rawDescOnce.Do(func() {
		file_workspace_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workspace_v1_task_proto_rawDesc), len(file_workspace_v1_task_proto_rawDesc)))
	})
	return file_workspace_v1_task_proto_rawDescData
}

var file_workspace_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workspace_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_workspace_v1_task_proto_goTypes = []any{
	(TaskType)(0),              // 0: workspace.v1.TaskType
	(*Task)(nil),               // 1: workspace.v1.Task
	(*CreateTaskRequest)(nil),  // 2: workspace.v1.CreateTaskRequest
	(*CreateTaskResponse)(nil), // 3: workspace.v1.CreateTaskResponse
	(*GetTaskRequest)(nil),     // 4: workspace.v1.GetTaskRequest
	(*GetTaskResponse)(nil),    // 5: workspace.v1.GetTaskResponse
	(*ListTasksRequest)(nil),   // 6: workspace.v1.ListTasksRequest
	(*ListTasksResponse)(nil),  // 7: workspace.v1.ListTasksResponse
	(*DeleteTaskRequest)(nil),  // 8: workspace.v1.DeleteTaskRequest
	(*DeleteTaskResponse)(nil), // 9: workspace.v1.DeleteTaskResponse
	(*Todo)(nil),               // 10: workspace.v1.Todo
	(*Progress)(nil),           // 11: workspace.v1.Progress
	(*Issue)(nil),              // 12: workspace.v1.Issue
}
var file_workspace_v1_task_proto_depIdxs = []int32{
	10, // 0: workspace.v1.Task.todo:type_name -> workspace.v1.Todo
	11, // 1: workspace.v1.Task.progress:type_name -> workspace.v1.Progress
	12, // 2: workspace.v1.Task.issue:type_name -> workspace.v1.Issue
	0,  // 3: workspace.v1.CreateTaskRequest.type:type_name -> workspace.v1.TaskType
	1,  // 4: workspace.v1.CreateTaskResponse.task:type_name -> workspace.v1.Task
	1,  // 5: workspace.v1.GetTaskResponse.task:type_name -> workspace.v1.Task
	0,  // 6: workspace.v1.ListTasksRequest.type:type_name -> workspace.v1.TaskType
	1,  // 7: workspace.v1.ListTasksResponse.tasks:type_name -> workspace.v1.Task
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_workspace_v1_task_proto_init() }
func file_workspace_v1_task_proto_init() {
	if File_workspace_v1_task_proto != nil {
		return
	}
	file_workspace_v1_todo_proto_init()
	file_workspace_v1_progress_proto_init()
	file_workspace_v1_issue_proto_init()
	file_workspace_v1_task_proto_msgTypes[0].OneofWrappers = []any{
		(*Task_Todo)(nil),
		(*Task_Progress)(nil),
		(*Task_Issue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workspace_v1_task_proto_rawDesc), len(file_workspace_v1_task_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workspace_v1_task_proto_goTypes,
		DependencyIndexes: file_workspace_v1_task_proto_depIdxs,
		EnumInfos:         file_workspace_v1_task_proto_enumTypes,
		MessageInfos:      file_workspace_v1_task_proto_msgTypes,
	}.Build()
	File_workspace_v1_task_proto = out.File
	file_workspace_v1_task_proto_goTypes = nil
	file_workspace_v1_task_proto_depIdxs = nil
}
